{
  "name": "assetmgmt",
  "version": "0.0.0",
  "description": "assetmgmt - borqs iot platform",
  "keywords": [],
  "homepage": "",
  "author": {
    "name": "sampath mallapadi",
    "email": "sampath.mallapadi@borqs.com"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.540.0",
    "aws-sdk": "^2.1596.0",
    "axios": "^1.7.2",
    "bcrypt": "^5.1.1",
    "crypto-js": "^4.1.1",
    "csv-parser": "^3.0.0",
    "dot-object": "^2.1.4",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-list-endpoints": "^6.0.0",
    "fast-csv": "^4.3.6",
    "ffmpeg-static": "^5.2.0",
    "findead": "^1.2.3",
    "fluent-ffmpeg": "^2.1.3",
    "helmet": "^7.0.0",
    "jest": "^29.6.3",
    "json-path": "^0.1.3",
    "jsonpath": "^1.1.1",
    "jsonwebtoken": "^9.0.1",
    "kafka-node": "^5.0.0",
    "ldapjs": "^3.0.5",
    "mime-match": "^1.0.2",
    "mime-matcher": "^1.0.5",
    "moment": "^2.29.4",
    "mongodb": "^6.7.0",
    "mongoose": "^7.4.3",
    "mongoose-int32": "^0.6.0",
    "multer": "^1.4.5-lts.1",
    "mustache": "^4.2.0",
    "nodemailer": "^6.9.13",
    "optimist": "^0.6.1",
    "portfinder": "^1.0.32",
    "query-string": "^8.1.0",
    "request": "^2.88.2",
    "rxjs": "^7.8.1",
    "serve-favicon": "^2.5.0",
    "shelljs": "^0.8.5",
    "supertest": "^6.3.3",
    "swagger": "^0.7.5",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-dist": "^5.17.14",
    "swagger-ui-express": "^5.0.1",
    "unzip": "^0.1.11",
    "unzip-stream": "^0.3.4",
    "unzipper": "^0.11.6",
    "winston": "^3.10.0",
    "winston-daily-rotate-file": "^4.7.1"
  },
  "devDependencies": {
    "cross-env": "^7.0.3",
    "eslint": "^8.47.0",
    "eslint-plugin-jest": "^27.2.3",
    "eslint-plugin-react": "^7.33.2",
    "mockingoose": "^2.16.2",
    "underscore": "^1.13.6"
  },
  "env": {
    "node": true
  },
  "scripts": {
    "test": "cross-env NODE_ENV=test jest --testTimeout=5000 --detectOpenHandles --forceExit",
    "start": "node ./bootstrap/bin/bootstrap.js",
    "dev": "nodemon ./bootstrap/bin/bootstrap.js",
    "docker:build": "docker build -t bootstrap .",
    "docker:run": "docker run -d bootstrap"
  }
}
