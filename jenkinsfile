pipeline {
    agent { label "agent-1"}
    
    environment {
        SONAR_TOKEN=credentials('sonar-token')
        DOCKER_REGISTRY_CREDENTIALS = credentials('docker-registry-creds') // Jenkins credentials ID for Docker registry
        BOOTSTRAP_IMAGE = "ramgopal65/bootstrap" 
        DOCKER_TAG = "${BUILD_NUMBER}"
    }

    stages {
        stage('checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/ramgopal65/assetmgmt.git'
            }
        }
            
        stage('SonarCloud Analysis') {
            steps {
                sh '''
                npm install -g sonar-scanner
                sonar-scanner \
                -Dsonar.projectKey=ramgopal65_sonar   \
                -Dsonar.organization=ramgopal65 \
                -Dsonar.host.url=https://sonarcloud.io \
                -Dsonar.login=$SONAR_TOKEN
                '''
            }
        }
        stage('Build Docker Image') {
            steps {
                    sh 'npm run docker:build-boot'
                    sh 'docker images'
                    sh "docker tag bootstrap:latest ${BOOTSTRAP_IMAGE}:${BUILD_NUMBER}"
            }
        } 
        stage('Push Docker Image') {
            steps {
                script {
                    sh """
                    echo $DOCKER_REGISTRY_CREDENTIALS_PSW | docker login -u $DOCKER_REGISTRY_CREDENTIALS_USR --password-stdin
                    """
                    sh "docker push ${BOOTSTRAP_IMAGE}:${BUILD_NUMBER}"
                    sh """
                    docker images --format '{{.Repository}}:{{.Tag}}' | \
                    grep -vE 'ramgopa65/bootstrap:(${DOCKER_TAG}|latest)' | \
                    xargs -r docker rmi
                    """
                }
            }
        }
    }
     post {
        always {
            echo 'Cleaning up...'
        }
    }
}